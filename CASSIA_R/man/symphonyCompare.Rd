% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotator.R
\name{symphonyCompare}
\alias{symphonyCompare}
\title{Symphony Compare - Advanced Multi-Model Cell Type Comparison with Consensus Building}
\usage{
symphonyCompare(
  tissue,
  celltypes,
  marker_set,
  species = "human",
  model_preset = "symphony",
  custom_models = NULL,
  output_dir = NULL,
  output_basename = NULL,
  enable_discussion = TRUE,
  max_discussion_rounds = 2L,
  consensus_threshold = 0.8,
  generate_report = TRUE,
  api_key = NULL,
  verbose = TRUE
)
}
\arguments{
\item{tissue}{Character string specifying the tissue type (e.g., "blood", "brain", "liver")}

\item{celltypes}{Character vector of 2-4 cell types to compare}

\item{marker_set}{Character vector or string of gene markers to analyze}

\item{species}{Character string specifying the species (default: "human")}

\item{model_preset}{Character string specifying preset model configuration. Options:
\itemize{
\item "symphony": High-performance ensemble (Claude, GPT-4, Gemini Pro)
\item "quartet": Balanced 4-model ensemble
\item "budget": Cost-effective models
\item "custom": Use custom_models list
}}

\item{custom_models}{Character vector of custom models to use (when model_preset="custom")}

\item{output_dir}{Character string specifying directory to save results (default: current directory)}

\item{output_basename}{Character string for base name of output files (auto-generated if NULL)}

\item{enable_discussion}{Logical indicating whether to enable automatic discussion rounds when no consensus (default: TRUE)}

\item{max_discussion_rounds}{Integer specifying maximum discussion rounds to perform (default: 2)}

\item{consensus_threshold}{Numeric value (0-1) specifying fraction of models that must agree for consensus (default: 0.8)}

\item{generate_report}{Logical indicating whether to generate interactive HTML report (default: TRUE)}

\item{api_key}{Character string for OpenRouter API key (uses environment variable if NULL)}

\item{verbose}{Logical indicating whether to print progress messages (default: TRUE)}
}
\value{
A list containing:
\itemize{
\item results: List of all model responses and scores
\item consensus: The consensus cell type (if reached)
\item confidence: Confidence level of the consensus (0-1)
\item csv_file: Path to the generated CSV file
\item html_file: Path to the generated HTML report (if enabled)
\item summary: Summary statistics of the comparison
\item dataframe: R data frame with structured results
}
}
\description{
Orchestrate multiple AI models to compare cell types with automatic consensus building.
This function conducts a comprehensive cell type comparison using multiple AI models in parallel,
automatically triggering discussion rounds when models disagree on the best matching cell type.
Think of it as a virtual panel of expert biologists debating and reaching consensus.
}
\details{
\strong{Model Presets:}
\itemize{
\item \strong{symphony}: High-performance ensemble using Claude 3.7 Sonnet, GPT-4o mini, and Gemini 2.5 Pro
\item \strong{quartet}: Balanced 4-model ensemble adding Llama 3.3 405B
\item \strong{budget}: Cost-effective models using Gemini Flash, DeepSeek, and Grok mini
\item \strong{custom}: Use your own model list via custom_models parameter
}

\strong{Discussion Rounds:}
When models disagree on the best cell type match (consensus < threshold), the function
automatically triggers discussion rounds where models critique each other's analyses
and provide refined scores. This continues until consensus is reached or max rounds exceeded.

\strong{Output Files:}
\itemize{
\item CSV file with detailed scores and reasoning for each model and cell type
\item Interactive HTML report showing score progression, model discussions, and consensus building
\item Both files are timestamped for easy organization
}

\strong{API Requirements:}
Requires an OpenRouter API key (supports 100+ models). Set via:
\itemize{
\item Environment variable: \code{Sys.setenv(OPENROUTER_API_KEY = "your-key")}
\item Direct parameter: \code{api_key = "your-key"}
\item Using \code{setOpenRouterApiKey("your-key")}
}
}
\examples{
\dontrun{
# Basic usage - let Symphony Compare handle everything
results <- symphonyCompare(
  tissue = "peripheral blood",
  celltypes = c("T cell", "B cell", "NK cell", "Monocyte"),
  marker_set = c("CD3", "CD4", "CD8", "CD19", "CD20", "CD16", "CD56", "CD14"),
  species = "human"
)

# Access the results
cat("Consensus:", results$consensus, "\n")
cat("Confidence:", sprintf("%.1f\%\%", results$confidence * 100), "\n")

# View detailed scores
print(results$summary$celltype_scores)

# Advanced usage with custom settings
results <- symphonyCompare(
  tissue = "brain",
  celltypes = c("Neuron", "Astrocyte", "Microglia", "Oligodendrocyte"),
  marker_set = c("RBFOX3", "GFAP", "IBA1", "OLIG2", "MAP2", "S100B", "CD11B", "MBP"),
  species = "mouse",
  model_preset = "quartet",  # Use 4 models instead of 3
  enable_discussion = TRUE,  # Enable automatic discussion rounds
  max_discussion_rounds = 3,  # Allow up to 3 discussion rounds
  consensus_threshold = 0.75,  # 75\% of models must agree
  output_dir = "./symphony_results",
  verbose = TRUE
)

# Custom model configuration
results <- symphonyCompare(
  tissue = "liver",
  celltypes = c("Hepatocyte", "Kupffer cell"),
  marker_set = "ALB, CYP3A4, CD163, MARCO",
  model_preset = "custom",
  custom_models = c("anthropic/claude-3.5-sonnet", "openai/gpt-4o"),
  enable_discussion = FALSE  # Skip discussion for 2 models
)

# Work with results dataframe
df <- results$dataframe
head(df[, c("model", "researcher", "round", "T cell_score", "B cell_score")])

# Access summary statistics
summary_stats <- results$summary
cat("Total rounds:", summary_stats$total_rounds, "\n")
cat("Models used:", summary_stats$models_used, "\n")

# Cell type score details
for(celltype in names(summary_stats$celltype_scores)) {
  scores <- summary_stats$celltype_scores[[celltype]]
  cat(sprintf("\%s: \%.1f Â± \%.1f (range: \%.0f-\%.0f)\n", 
              celltype, scores$mean, scores$std, scores$min, scores$max))
}
}
}
\seealso{
\code{\link{compareCelltypes}} for the simpler version without consensus building

\code{\link{setOpenRouterApiKey}} for setting up API access

\code{\link{runCASSIA}} for single-model cell type annotation
}